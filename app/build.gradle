plugins {
    id 'com.android.application'
    id 'androidx.navigation.safeargs'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

def apikeyPropertiesFile = rootProject.file("local.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

android {
    compileSdk rootProject.COMPILE_SDK

    defaultConfig {
        applicationId "com.example.cinemates"
        minSdk rootProject.MIN_SDK
        targetSdk rootProject.TARGET_SDK
        versionCode 1
        versionName "1.0"
        // should correspond to key/value pairs inside the file
        buildConfigField("String", "TMDB_API_KEY", apikeyProperties['TMDB_API_KEY'])
        buildConfigField("String", "YT_API_KEY", apikeyProperties['YT_API_KEY'])
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions.freeCompilerArgs += ["-Xuse-experimental=kotlin.Experimental"]
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/license.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 'META-INF/notice.txt', 'META-INF/ASL2.0']
        }
    }
    namespace 'com.example.cinemates'
}

dependencies {

    implementation project(path: ':LinearLayoutInfo')
    implementation project(path: ':HorizontalChipView')
    implementation project(path: ':RecyclerViewEmptyStateSupport')

    implementation(libs.appcompat)
    implementation(libs.material)
    implementation(libs.constraintLayout)
    implementation(libs.legacy)
    implementation(libs.fragmentKtx)
    testImplementation(libs.junitTest)
    androidTestImplementation(libs.junitAndroidTest)
    androidTestImplementation(libs.espresso)

    // Kotlin Extensions
    implementation(libs.core.ktx)

    // Kotlin Coroutines
    implementation(libs.bundles.coroutines)

    // Jetpack Navigation - Kotlin
    implementation(libs.bundles.navigation)

    // Dagger Hilt
    implementation(libs.dagger.core)
    kapt(libs.dagger.compiler)

    // Retrofit
    implementation(libs.bundles.retrofit)

    // Lifecycle Kotlin Extensions
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_ktx"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_ktx"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_viewmodel_ktx"

    // Glide
    implementation(libs.glide.core)
    kapt(libs.glide.compiler)

    // Youtube
    implementation files('libs/YouTubeAndroidPlayerApi.jar')

    //ReadMore
    implementation 'com.borjabravo:readmoretextview:2.1.0'


}